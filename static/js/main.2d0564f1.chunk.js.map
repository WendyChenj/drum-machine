{"version":3,"sources":["components/DrumPads/DrumPad.js","components/drumEles.js","components/DrumPads/DrumPads.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","drum","padClick","buttonId","text","class","id","onClick","event","src","audioURL","drumEles","DrumPads","useState","drumText","setDrumText","useEffect","document","addEventListener","pressDrumKey","drumCharsArray","map","ele","preventDefault","includes","key","toUpperCase","getElementById","play","drumId","clickPadHandler","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mQAkBeA,G,MAfC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjBC,EAAQ,mBAAeF,EAAKG,MAElC,OACE,yBACEC,MAAM,WACNC,GAAIH,EACJI,QAAS,SAACC,GAAD,OAAWN,EAASM,EAAOP,EAAKG,OAH3C,UAKE,uBAAOK,IAAKR,EAAKS,SAAUL,MAAM,OAAOC,GAAIL,EAAKG,OAChDH,EAAKG,UC0BGO,EAvCE,CACf,CACEP,KAAM,IACNM,SAAU,4DAEZ,CACEN,KAAM,IACNM,SAAU,4DAEZ,CACEN,KAAM,IACNM,SAAU,4DAEZ,CACEN,KAAM,IACNM,SAAU,8DAEZ,CACEN,KAAM,IACNM,SAAU,4DAEZ,CACEN,KAAM,IACNM,SAAU,0DAEZ,CACEN,KAAM,IACNM,SAAU,8DAEZ,CACEN,KAAM,IACNM,SAAU,4DAEZ,CACEN,KAAM,IACNM,SAAU,2DCKCE,G,MAnCE,WAAO,IAAD,EACWC,mBAAS,oBADpB,mBACdC,EADc,KACJC,EADI,KAGrBC,qBAAU,WACRC,SAASC,iBAAiB,UAAWC,MAGvC,IAMIC,EAAiBT,EAASU,KAAK,SAAAC,GAAG,OAAIA,EAAIlB,QAExCe,EAAe,SAACX,GACpBA,EAAMe,iBAEFH,EAAeI,SAAShB,EAAMiB,IAAIC,iBACpCT,SAASU,eAAenB,EAAMiB,IAAIC,eAAeE,OACjDb,EAAY,wBAAD,OAAyBP,EAAMiB,IAAIC,cAAnC,QAIf,OACE,sBAAKpB,GAAG,eAAR,UACE,mBAAGA,GAAG,UAAN,SAAiBQ,IACjB,qBAAKR,GAAG,aAAR,SACGK,EAASU,KAAK,SAACC,GAAD,OAAS,cAAC,EAAD,CAASrB,KAAMqB,EAAoBpB,SAAU,SAACM,GAAD,OArBnD,SAACA,EAAOqB,GAC9BrB,EAAMe,iBACNN,SAASU,eAAeE,GAAQD,OAChCb,EAAY,wBAAD,OAAyBc,EAAzB,MAkByEC,CAAgBtB,EAAOc,EAAIlB,QAA1DkB,EAAIlB,gB,MCrB9C2B,MARf,WACE,OACE,qBAAKzB,GAAG,YAAR,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAASU,eAAe,SAM1BK,M","file":"static/js/main.2d0564f1.chunk.js","sourcesContent":["import React from 'react';\nimport './DrumPad.scss';\n\nconst DrumPad = ({ drum, padClick }) => {\n  const buttonId = `drum-pad-${drum.text}`;\n\n  return (\n    <button \n      class=\"drum-pad\" \n      id={buttonId} \n      onClick={(event) => padClick(event, drum.text)}\n     >\n      <audio src={drum.audioURL} class=\"clip\" id={drum.text} />\n      {drum.text}\n    </button>\n  );\n}\n\nexport default DrumPad;","const drumEles = [\n  {\n    text: \"Q\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\n  },\n  {\n    text: \"W\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\n  },\n  {\n    text: \"E\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\n  },\n  {\n    text: \"A\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n  },\n  {\n    text: \"S\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\n  },\n  {\n    text: \"D\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\n  },\n  {\n    text: \"Z\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n  },\n  {\n    text: \"X\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\n  },\n  {\n    text: \"C\",\n    audioURL: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n  }\n];\n\nexport default drumEles;","import React, { useState, useEffect } from 'react';\nimport DrumPad from './DrumPad';\nimport drumEles from '../drumEles';\nimport './DrumPads.scss';\n\nconst DrumPads = () => {\n  const [drumText, setDrumText] = useState(\"Welcome to play!\");\n  \n  useEffect(() => {\n    document.addEventListener('keydown', pressDrumKey);\n  });\n  \n  const clickPadHandler = (event, drumId) => {\n    event.preventDefault();\n    document.getElementById(drumId).play();\n    setDrumText(`You hit the drum key ${drumId}.`);\n  }\n  \n  let drumCharsArray = drumEles.map( ele => ele.text);\n  \n  const pressDrumKey = (event) => {\n    event.preventDefault();\n      \n    if (drumCharsArray.includes(event.key.toUpperCase())) {\n      document.getElementById(event.key.toUpperCase()).play();\n      setDrumText(`You hit the drum key ${event.key.toUpperCase()}.`);\n    }\n  }\n\n  return (\n    <div id=\"drum-machine\">\n      <p id=\"display\">{drumText}</p>\n      <div id=\"pads-group\">\n        {drumEles.map( (ele) => <DrumPad drum={ele} key={ele.text} padClick={(event) => clickPadHandler(event, ele.text)} />)}\n      </div>\n    </div>\n  );\n\n}\n\nexport default DrumPads;\n","import React from 'react';\nimport DrumPads from './components/DrumPads/DrumPads';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div id='container'>\n      <DrumPads />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}